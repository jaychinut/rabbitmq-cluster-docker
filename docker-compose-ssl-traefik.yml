version: '3.7'

services:
  rabbitmq1:
    image: "rabbitmq:3-management"
    container_name: rabbitmq1
    hostname: rabbitmq1
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
      - RABBITMQ_NODENAME=rabbit@rabbitmq1
      - RABBITMQ_SSL_CACERTFILE=/etc/rabbitmq/certs/ca_certificate.pem
      - RABBITMQ_SSL_CERTFILE=/etc/rabbitmq/certs/server_certificate.pem
      - RABBITMQ_SSL_KEYFILE=/etc/rabbitmq/certs/server_certificate.pem.key
      - RABBITMQ_SSL_VERIFY=verify_peer
    volumes:
      - ./.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie
      - ./cluster-entrypoint-ssl.sh:/usr/local/bin/cluster-entrypoint-ssl.sh
      - ./certs:/etc/rabbitmq/certs
    entrypoint: /usr/local/bin/cluster-entrypoint-ssl.sh
    labels:
      - traefik.enable=true
      - traefik.docker.network=rabbitmq_network
      - traefik.http.routers.rabbitmq-management.rule=Host(`rabbitmq-management`)
      - traefik.http.routers.rabbitmq-management.entrypoints=rabbitmq-management
      - traefik.http.services.rabbitmq-management.loadbalancer.server.port=15672

      - traefik.tcp.routers.rabbitmq.rule=HostSNI(`*`)
      - traefik.tcp.routers.rabbitmq.entrypoints=rabbitmq
      - traefik.tcp.routers.rabbitmq.service=rabbitmq-svc
      - traefik.tcp.services.rabbitmq-svc.loadbalancer.server.port=5671
      # - traefik.tcp.routers.rabbitmq.tls=true
      # - traefik.tcp.routers.rabbitmq.tls.certificates[0].certFile=/etc/rabbitmq/certs/server_certificate.pem
      # - traefik.tcp.routers.rabbitmq.tls.certificates[0].keyFile=/etc/rabbitmq/certs/server_certificate.pem.key
      # - traefik.tcp.routers.rabbitmq.tls.certificates[0].caFile=/etc/rabbitmq/certs/ca_certificate.pem
    ports:
      - "12000:5671"
      - "12001:15672"
    networks:
      - rabbitmq_network

  rabbitmq2:
    image: "rabbitmq:3-management"
    container_name: rabbitmq2
    hostname: rabbitmq2
    depends_on:
      - rabbitmq1
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
      - RABBITMQ_NODENAME=rabbit@rabbitmq2
      - JOIN_CLUSTER_HOST=rabbitmq1
      - RABBITMQ_SSL_CACERTFILE=/etc/rabbitmq/certs/ca_certificate.pem
      - RABBITMQ_SSL_CERTFILE=/etc/rabbitmq/certs/server_certificate.pem
      - RABBITMQ_SSL_KEYFILE=/etc/rabbitmq/certs/server_certificate.pem.key
      - RABBITMQ_SSL_VERIFY=verify_peer
    volumes:
      - ./.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie
      - ./cluster-entrypoint-ssl.sh:/usr/local/bin/cluster-entrypoint-ssl.sh
      - ./certs:/etc/rabbitmq/certs
    entrypoint: /bin/bash -c  "sleep 20 && /usr/local/bin/cluster-entrypoint-ssl.sh rabbitmq1"
    labels:
      - traefik.enable=true
      - traefik.docker.network=rabbitmq_network
      - traefik.http.routers.rabbitmq-management.rule=Host(`rabbitmq-management`)
      - traefik.http.routers.rabbitmq-management.entrypoints=rabbitmq-management
      - traefik.http.services.rabbitmq-management.loadbalancer.server.port=15672

      - traefik.tcp.routers.rabbitmq.rule=HostSNI(`*`)
      - traefik.tcp.routers.rabbitmq.entrypoints=rabbitmq
      - traefik.tcp.routers.rabbitmq.service=rabbitmq-svc
      - traefik.tcp.services.rabbitmq-svc.loadbalancer.server.port=5671
    networks:
      - rabbitmq_network

  rabbitmq3:
    image: "rabbitmq:3-management"
    container_name: rabbitmq3
    hostname: rabbitmq3
    depends_on:
      - rabbitmq1
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
      - RABBITMQ_NODENAME=rabbit@rabbitmq3
      - JOIN_CLUSTER_HOST=rabbitmq1
      - RABBITMQ_SSL_CACERTFILE=/etc/rabbitmq/certs/ca_certificate.pem
      - RABBITMQ_SSL_CERTFILE=/etc/rabbitmq/certs/server_certificate.pem
      - RABBITMQ_SSL_KEYFILE=/etc/rabbitmq/certs/server_certificate.pem.key
      - RABBITMQ_SSL_VERIFY=verify_peer
    volumes:
      - ./.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie
      - ./cluster-entrypoint-ssl.sh:/usr/local/bin/cluster-entrypoint-ssl.sh
      - ./certs:/etc/rabbitmq/certs
    entrypoint: /bin/bash -c  "sleep 40 && /usr/local/bin/cluster-entrypoint-ssl.sh rabbitmq1"
    labels:
      - traefik.enable=true
      - traefik.docker.network=rabbitmq_network
      - traefik.http.routers.rabbitmq-management.rule=Host(`rabbitmq-management`)
      - traefik.http.routers.rabbitmq-management.entrypoints=rabbitmq-management
      - traefik.http.services.rabbitmq-management.loadbalancer.server.port=15672

      - traefik.tcp.routers.rabbitmq.rule=HostSNI(`*`)
      - traefik.tcp.routers.rabbitmq.entrypoints=rabbitmq
      - traefik.tcp.routers.rabbitmq.service=rabbitmq-svc
      - traefik.tcp.services.rabbitmq-svc.loadbalancer.server.port=5671
    networks:
      - rabbitmq_network

  traefik:
    image: "traefik:v2.10"
    container_name: traefik
    ports:
      - "80:80"
      - "443:443"
      - "8081:8080"
      - "5671:5671"
      - "15672:15672"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - ./certs:/etc/rabbitmq/certs
      - ./traefik.yml:/etc/traefik/traefik.yml
    networks:
      - rabbitmq_network

networks:
  rabbitmq_network:
